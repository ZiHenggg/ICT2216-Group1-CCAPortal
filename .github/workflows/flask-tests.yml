name: Flask UI + Unit Testing

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      TESTING: "1"
      FLASK_ENV: "development"
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_SERVER: ${{ secrets.DB_SERVER }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_DRIVER: ${{ secrets.DB_DRIVER }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Microsoft ODBC Driver 18 for SQL Server
        run: |
          curl -sSL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | sudo tee /usr/share/keyrings/microsoft.gpg > /dev/null
          echo "deb [signed-by=/usr/share/keyrings/microsoft.gpg] https://packages.microsoft.com/ubuntu/22.04/prod jammy main" | sudo tee /etc/apt/sources.list.d/mssql-release.list
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y msodbcsql18 unixodbc-dev

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV

      - name: Show DB Secrets (sanitized)
        run: |
          echo "DB_SERVER: $DB_SERVER"
          echo "DB_DRIVER: $DB_DRIVER"

      - name: Create config.py (already present if committed, skip if not needed)
        run: echo "Skipping config.py generation, using committed version"

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install selenium webdriver-manager pytest pytest-cov

      - name: Start Flask App
        run: |
          nohup python app.py &
          sleep 5

      - name: Wait for Flask to respond
        run: |
          for i in {1..10}; do
            echo "Checking Flask..."
            curl -s http://localhost:5000/health && break || sleep 3
          done

      - name: Run Unit Tests with Coverage
        run: pytest tests/ --cov=application
