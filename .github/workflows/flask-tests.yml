name: Flask UI + Unit Testing

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      TESTING: "1"
      FLASK_ENV: "development"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Microsoft ODBC Driver 18 for SQL Server
        run: |
          curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          sudo apt-add-repository "$(curl https://packages.microsoft.com/config/ubuntu/22.04/prod.list)"
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y msodbcsql18 unixodbc-dev

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV

      - name: Create config.py
        env:
          DB_URI: ${{ secrets.DB_URI }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
        run: |
              cat > create_config.py <<'EOF'
              from pathlib import Path
              import os

              content = '''class Config:
                  SQLALCHEMY_DATABASE_URI = '{db_uri}'
                  SECRET_KEY = '{secret_key}'
                  SESSION_TYPE = 'filesystem'
              '''.format(
                  db_uri=os.getenv('DB_URI'),
                  secret_key=os.getenv('SECRET_KEY')
              )
              Path('config.py').write_text(content)
              EOF

                  python create_config.py

      - name: Debug config.py
        run: cat config.py

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install selenium webdriver-manager

      - name: Start Flask App
        run: |
          nohup python app.py &
          sleep 5

      - name: Wait for Flask to respond
        run: |
          for i in {1..10}; do
            echo "Checking Flask..."
            curl -s http://localhost:5000/health && break || sleep 3
          done

      - name: Run Unit Tests
        run: pytest tests/test_login.py
